apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.domain }}-{{ .Values.srvName }}-deployment
  labels:
    app: {{ .Values.domain }}-{{ .Values.srvName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.domain }}-{{ .Values.srvName }}
  template:
    metadata:
      labels:
        app: {{ .Values.domain }}-{{ .Values.srvName }}
        canary: "false" 
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: {{ .Values.domain }}-{{ .Values.srvName }}
        image: {{ .Values.dockerImage }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.httpPort }}
        readinessProbe:
          httpGet:
            path: "{{ .Values.domain }}/{{ .Values.srvName }}/health-check"
            port: {{ .Values.httpPort }}
          initialDelaySeconds: 10
          timeoutSeconds: 5
        env:
        - name: VAULT_ADDR
          valueFrom:
            secretKeyRef:
              name: {{ .Values.domain }}-{{ .Values.srvName }}-secret
              key: vault_addr
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.domain }}-{{ .Values.srvName }}-secret
              key: vault_token
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.domain }}-{{ .Values.srvName }}-configmap
              key: environment
        - name: DOMAIN
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.domain }}-{{ .Values.srvName }}-configmap
              key: domain
        - name: SERVICE
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.domain }}-{{ .Values.srvName }}-configmap
              key: service